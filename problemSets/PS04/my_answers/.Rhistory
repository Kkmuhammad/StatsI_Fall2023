num [1:4, 1:2] 1 2 3 4 5 6 7 8
> 1 + 1
1 + 1
>1 + 1
> 1 + 1
1 + 1
num [1:4, 1:2] 1 2 3 4 5 6 7 8
example <- matrix(c(1, 2, 3, 4, 5, 6, 7, 8), nrow = 4, ncol = 2)
View(example)
example <- matrix(c(1, 2, 3, 4, 5, 6, 7, 8),nrow = 4,ncol = 2)
example <- matrix(c(1,2,3,4,5,6,7,8), nrow = 2,ncol = 4)
example <- matrix(c(1, 2, 3, 4, 5, 6, 7, 8),nrow = 4,ncol = 2)
example <- matrix(c(1,2,3,4,5,6,7,8), nrow = 2,ncol = 4)
packageName(ggplot2)
install.packages("ggplot2")
install.packages("dplyr")
install.packages("statsr")
library(dplyr)
library(statsr, ggplot2)
1+3
test <- c(1,2,3)
1+3
test <- c(1,2,3)
#1+3
test <- c(1,2,3)
#vkjbkln
#vkjbkln
#vkjbkln
#vkjbkln
library(dplyr)
install.packages(c("fansi", "ggplot2", "rpart", "shiny", "tinytex", "vctrs"))
install.packages("devtools")
library(devtools)
library(devtools)
install.packages("dplyr")
install.packages("ggplot2")
install.packages("shiny")
install.packages("shiny")
install_github("statswithr/statsr")
install_github("statsr")
install.packages("statsr")
installed.packages(statsr)
install.packages("rmarkdown")
install.packages("broom")
install.packages("gridextra")
install.packages("gridExtra")
install.packages("cubature")
install.packages("tidyr")
install_github("StatsWithR/statsr")
install.packages("devtools")
install.packages("devtools")
install_github("StatsWithR/statsr")
data(arbuthnot)
<div id="license">
data(arbuthnot)
<div id="license">
library(ggplot2)
library(statsr)
data(arbuthnot)
data(arbuthnot)
1+1
1+1
matrix(c(1,2,3,4,5,6,7,8),nrow=4, ncol=2)
matrix (c(1,2,3,4,5,6,7,8),nrow=4, ncol=2)
matrix (c (1,2,3,4,5,6,7,8), nrow=4, ncol=2)
install.packages("ggplot2")
installed.packages()
old.packages()
update.packages()
install.packages(c("knitr", "withr"))
detach('package:ggplot2,unload=true')
detach('package:ggplot2')
library(ggplot2)
remove.packages("ggplot2")
install.packages('ggplot2')
install.packages("ggplot2")
version
sessionInfo()
library(ggplot2)
browseVignettes('ggplot2')
# R Markdown
## R Markdown
### R Markdown
knitr::opts_chunk$set(echo = TRUE)
# R Markdown
pchisq(0.15,2,FALSE)
model1 <- lm(voteshare~difflog, data= inc.sub)
summary(model1)
# read in data
inc.sub <- read.csv("https://raw.githubusercontent.com/ASDS-TCD/StatsI_Fall2023/main/datasets/incumbents_subset.csv")
model1 <- lm(voteshare~difflog, data= inc.sub)
summary(model1)
#1.3
res1 <- residuals(model1)
res1 <- model1$residuals
model2 <- lm(presvote~difflog, data= inc.sub)
summary(model2)
#2.3
res2 <- residuals(model2)
model3 <- lm(voteshare~presvote, data= inc.sub)
summary(model3)
model4 <- lm(res1~res2)
summary(model4)
#4.2
pdf("plot4.pdf", width=8)
plot(res2,res1)
abline(model4)
dev.off()
model5 <- lm(voteshare~difflog+presvote, data= inc.sub)
summary(model5)
library(statsr)
library(dplyr)
library(shiny)
library(ggplot2)
---
title: "Foundations for inference - Sampling distributions"
source("~/.active-rstudio-document", echo=TRUE)
rmarkdown::render("sampling distributions.Rmd")
rmarkdown::render("sampling_distributions.Rmd")
install.packages("car")
install.packages("car", dependencies = TRUE)
library(car)
data("Prestige")
help("Prestige")
View(Prestige)
Prestige$professional <- ifelse(Prestige$type == "prof", 1, 0)
View(Prestige)
head(Prestige)
tail(Prestige)
model <- lm(prestige ~ income * professional, data = Prestige)
summary(model)
# The coefficients of precincts who are assigned lawn signs and standard
# error are given as 0.042 and 0.016 respectively. The degrees of freedom
# may be calculated using the formula: df= n - k -1 (df= 131 - 2 -1)
# which results in 128.
# Using R, the t statistic and p value may be calculated as:
coeff_signs <- 0.042
se_signs <- 0.016
df <- 128
t_stat <- coeff_signs / se_signs
# similarly, p value may be derived through:
p_value <- 2 * pt(-abs(t_stat), df)
summary(p_value)
# The coefficients of precincts who are assigned lawn signs and standard
# error are given as 0.042 and 0.013 respectively. The degrees of freedom
# may be calculated using the formula: df= n - k -1 (df= 131 - 2 -1)
# which results in 128.
# Using R, the t statistic and p value may be calculated as:
coeff_signs <- 0.042
se_signs <- 0.013
df <- 128
t_stat <- coeff_signs / se_signs
# similarly, p value may be derived through:
p_value <- 2 * pt(-abs(t_stat), df)
summary(p_value)
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
# set wd for current folder
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
install.packages("car", dependencies = TRUE)
library(car)
data("Prestige")
help("Prestige")
Prestige$professional <- ifelse(Prestige$type == "prof", 1, 0)
model <- lm(prestige ~ income + professional + income:professional,
data = Prestige)
summary(model)
coeff_signs <- 0.042
se_signs <- 0.016
df <- 128
t_stat <- coeff_signs / se_signs
# similarly, p value may be derived through:
p_value <- 2 * pt(-abs(t_stat), df)
summary(p_value)
coeff_signs <- 0.042
se_signs <- 0.013
df <- 128
t_stat <- coeff_signs / se_signs
# similarly, p value may be derived through:
p_value <- 2 * pt(-abs(t_stat), df)
summary(p_value)
